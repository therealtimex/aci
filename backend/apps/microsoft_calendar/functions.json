[
  {
    "name": "MICROSOFT_CALENDAR__LIST_CALENDARS",
    "description": "Get all the user's calendars. This retrieves calendars from the default calendar group and allows filtering, sorting, and selecting specific properties using OData query parameters.",
    "tags": ["calendar", "calendars", "list"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/me/calendars",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "description": "Query parameters for customizing the calendar list",
          "properties": {
            "$select": {
              "type": "string",
              "description": "Comma-separated list of properties to include in the response (e.g., 'id,name,color,owner')"
            },
            "$filter": {
              "type": "string",
              "description": "Filter expression to limit calendars returned (e.g., 'canEdit eq true', 'owner/name eq \"John Doe\"')"
            },
            "$orderby": {
              "type": "string",
              "description": "Property to sort calendars by with direction (e.g., 'name asc', 'createdDateTime desc')"
            },
            "$top": {
              "type": "integer",
              "description": "Maximum number of calendars to return"
            },
            "$skip": {
              "type": "integer",
              "description": "Number of calendars to skip for pagination"
            },
            "$expand": {
              "type": "string",
              "description": "Expand related entities (e.g., 'events', 'singleValueExtendedProperties')"
            }
          },
          "required": [],
          "visible": ["$select", "$filter", "$orderby", "$top", "$skip", "$expand"],
          "additionalProperties": false
        }
      },
      "required": [],
      "visible": ["query"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__CREATE_CALENDAR",
    "description": "Create a new calendar for the user. This creates a calendar in the user's default calendar group with the specified name and optional properties like color.",
    "tags": ["calendar", "create", "new"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/calendars",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "description": "The calendar properties for creating a new calendar",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the new calendar. This will be displayed in the calendar list."
            },
            "color": {
              "type": "string",
              "description": "The color theme for the calendar. Valid values include: lightBlue, lightGreen, lightOrange, lightGray, lightYellow, lightTeal, lightPink, lightBrown, lightRed, maxColor",
              "enum": ["lightBlue", "lightGreen", "lightOrange", "lightGray", "lightYellow", "lightTeal", "lightPink", "lightBrown", "lightRed", "maxColor"]
            },
            "hexColor": {
              "type": "string",
              "description": "The hex color code for the calendar (e.g., '#FF5733'). If provided, this takes precedence over the color property."
            }
          },
          "required": ["name"],
          "visible": ["name", "color", "hexColor"],
          "additionalProperties": false
        }
      },
      "required": ["body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__GET_CALENDAR",
    "description": "Get the properties and relationships of a specific calendar object by its ID. This retrieves detailed information about a calendar including permissions, settings, and metadata.",
    "tags": ["calendar", "get", "details"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/me/calendars/{calendar_id}",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "The path parameters",
          "properties": {
            "calendar_id": {
              "type": "string",
              "description": "The unique identifier of the calendar to retrieve"
            }
          },
          "required": ["calendar_id"],
          "visible": ["calendar_id"],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for customizing the calendar details",
          "properties": {
            "$select": {
              "type": "string",
              "description": "Comma-separated list of properties to include in the response (e.g., 'id,name,color,owner,canEdit')"
            },
            "$expand": {
              "type": "string",
              "description": "Expand related entities (e.g., 'events', 'calendarPermissions', 'singleValueExtendedProperties')"
            }
          },
          "required": [],
          "visible": ["$select", "$expand"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path", "query"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__UPDATE_CALENDAR",
    "description": "Update the properties of an existing calendar object. You can modify the calendar name, color theme, or default calendar status. Only include properties you want to update.",
    "tags": ["calendar", "update", "modify", "edit"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "PATCH",
      "path": "/me/calendars/{calendar_id}",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "The path parameters",
          "properties": {
            "calendar_id": {
              "type": "string",
              "description": "The unique identifier of the calendar to update"
            }
          },
          "required": ["calendar_id"],
          "visible": ["calendar_id"],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "The calendar properties to update. Only include fields you want to change.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The new name for the calendar. This will be displayed in the calendar list."
            },
            "color": {
              "type": "string",
              "description": "The color theme for the calendar. Valid values: lightBlue, lightGreen, lightOrange, lightGray, lightYellow, lightTeal, lightPink, lightBrown, lightRed, maxColor, auto",
              "enum": ["lightBlue", "lightGreen", "lightOrange", "lightGray", "lightYellow", "lightTeal", "lightPink", "lightBrown", "lightRed", "maxColor", "auto"]
            },
            "hexColor": {
              "type": "string",
              "description": "The hex color code for the calendar (e.g., '#FF5733'). If provided, this takes precedence over the color property."
            },
            "isDefaultCalendar": {
              "type": "boolean",
              "description": "True if this calendar should be the user's default calendar, false otherwise. Note: Only one calendar can be the default."
            }
          },
          "required": [],
          "visible": ["name", "color", "hexColor", "isDefaultCalendar"],
          "additionalProperties": false
        }
      },
      "required": ["path", "body"],
      "visible": ["path", "body"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__DELETE_CALENDAR",
    "description": "Delete a calendar other than the default calendar. This permanently removes the calendar and all its events. The default calendar cannot be deleted.",
    "tags": ["calendar", "delete", "remove"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "DELETE",
      "path": "/me/calendars/{calendar_id}",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "The path parameters",
          "properties": {
            "calendar_id": {
              "type": "string",
              "description": "The unique identifier of the calendar to delete. Note: Cannot delete the default calendar (isDefaultCalendar=true)."
            }
          },
          "required": ["calendar_id"],
          "visible": ["calendar_id"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__LIST_CALENDAR_VIEW",
    "description": "Get events, occurrences, exceptions and single instances from a calendar within a specified time range. This returns actual calendar events/appointments between the start and end dates.",
    "tags": ["calendar", "events", "view", "appointments", "time-range"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/me/calendars/{calendar_id}/calendarView",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "The path parameters",
          "properties": {
            "calendar_id": {
              "type": "string",
              "description": "The unique identifier of the calendar to get events from"
            }
          },
          "required": ["calendar_id"],
          "visible": ["calendar_id"],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the calendar view. startDateTime and endDateTime are required.",
          "properties": {
            "startDateTime": {
              "type": "string",
              "description": "The start date and time of the time range in ISO 8601 format (e.g., '2024-01-15T09:00:00-08:00' or '2024-01-15T17:00:00Z')"
            },
            "endDateTime": {
              "type": "string",
              "description": "The end date and time of the time range in ISO 8601 format (e.g., '2024-01-15T17:00:00-08:00' or '2024-01-16T01:00:00Z')"
            },
            "$select": {
              "type": "string",
              "description": "Comma-separated list of properties to include (e.g., 'id,subject,start,end,organizer'). Note: createdDateTime and lastModifiedDateTime don't support $select."
            },
            "$filter": {
              "type": "string",
              "description": "Filter expression to limit events (e.g., 'sensitivity eq normal', 'showAs eq busy')"
            },
            "$orderby": {
              "type": "string",
              "description": "Property to sort events by (e.g., 'start/dateTime asc', 'subject desc')"
            },
            "$top": {
              "type": "integer",
              "description": "Maximum number of events to return (minimum 1, maximum 1000)"
            },
            "$skip": {
              "type": "integer",
              "description": "Number of events to skip for pagination"
            }
          },
          "required": ["startDateTime", "endDateTime"],
          "visible": ["startDateTime", "endDateTime", "$select", "$filter", "$orderby", "$top", "$skip"],
          "additionalProperties": false
        },
        "header": {
          "type": "object",
          "description": "Optional request headers for customizing the response",
          "properties": {
            "Prefer": {
              "type": "string",
              "description": "Use 'outlook.timezone=\"{timezone}\"' to specify the timezone for start and end times in the response (e.g., 'outlook.timezone=\"Pacific Standard Time\"' or 'outlook.timezone=\"America/New_York\"'). If not specified, times are returned in UTC."
            }
          },
          "required": [],
          "visible": ["Prefer"],
          "additionalProperties": false
        }
      },
      "required": ["path", "query"],
      "visible": ["path", "query", "header"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__LIST_EVENTS",
    "description": "Retrieve a list of all events in a calendar without date restrictions. This returns single instance meetings, series masters, and recurring events. Use this to get all events in a calendar regardless of time range.",
    "tags": ["calendar", "events", "list", "all"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/me/calendars/{calendar_id}/events",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "The path parameters",
          "properties": {
            "calendar_id": {
              "type": "string",
              "description": "The unique identifier of the calendar to get events from"
            }
          },
          "required": ["calendar_id"],
          "visible": ["calendar_id"],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for customizing the event list",
          "properties": {
            "$select": {
              "type": "string",
              "description": "Comma-separated list of properties to include (e.g., 'id,subject,start,end,organizer,location')"
            },
            "$filter": {
              "type": "string",
              "description": "Filter expression to limit events (e.g., 'startsWith(subject,\"Meeting\")', 'sensitivity eq normal', 'showAs eq busy')"
            },
            "$orderby": {
              "type": "string",
              "description": "Property to sort events by (e.g., 'start/dateTime asc', 'subject desc', 'createdDateTime desc')"
            },
            "$top": {
              "type": "integer",
              "description": "Maximum number of events to return"
            },
            "$skip": {
              "type": "integer",
              "description": "Number of events to skip for pagination"
            },
            "$expand": {
              "type": "string",
              "description": "Expand related entities (e.g., 'attachments', 'calendar', 'instances')"
            }
          },
          "required": [],
          "visible": ["$select", "$filter", "$orderby", "$top", "$skip", "$expand"],
          "additionalProperties": false
        },
        "header": {
          "type": "object",
          "description": "Optional request headers for customizing the response",
          "properties": {
            "Prefer": {
              "type": "string",
              "description": "Use 'outlook.timezone=\"{timezone}\"' to specify the timezone for start and end times in the response (e.g., 'outlook.timezone=\"Pacific Standard Time\"' or 'outlook.timezone=\"America/New_York\"'). If not specified, times are returned in UTC."
            }
          },
          "required": [],
          "visible": ["Prefer"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path", "query", "header"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__CREATE_EVENT",
    "description": "Create a new event in a calendar. This allows creating meetings, appointments, and events with attendees, locations, recurrence patterns, and online meeting details.",
    "tags": ["calendar", "event", "create", "meeting", "appointment"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/calendars/{calendar_id}/events",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "The path parameters",
          "properties": {
            "calendar_id": {
              "type": "string",
              "description": "The unique identifier of the calendar to create the event in"
            }
          },
          "required": ["calendar_id"],
          "visible": ["calendar_id"],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Event details to create",
          "properties": {
            "subject": {
              "type": "string",
              "description": "The event title/subject"
            },
             "body": {
               "type": "object",
               "description": "The event description/body",
               "properties": {
                 "contentType": {
                   "type": "string",
                   "enum": ["text", "html"],
                   "description": "The content type (text or html)"
                 },
                 "content": {
                   "type": "string",
                   "description": "The content of the event description"
                 }
               },
               "required": [],
               "visible": ["contentType", "content"],
               "additionalProperties": false
             },
              "start": {
               "type": "object",
               "description": "Event start date and time",
               "properties": {
                 "dateTime": {
                   "type": "string",
                   "description": "Start date and time in ISO 8601 format (e.g., '2024-04-04T14:00:00')"
                 },
                 "timeZone": {
                   "type": "string",
                   "description": "Time zone (e.g., 'UTC', 'America/New_York', 'Europe/London')"
                 }
               },
               "required": ["dateTime"],
               "visible": ["dateTime", "timeZone"],
               "additionalProperties": false
             },
             "end": {
               "type": "object",
               "description": "Event end date and time",
               "properties": {
                 "dateTime": {
                   "type": "string",
                   "description": "End date and time in ISO 8601 format (e.g., '2024-04-04T15:00:00')"
                 },
                 "timeZone": {
                   "type": "string",
                   "description": "Time zone (e.g., 'UTC', 'America/New_York', 'Europe/London')"
                 }
               },
               "required": ["dateTime"],
               "visible": ["dateTime", "timeZone"],
               "additionalProperties": false
             },
                         "location": {
               "type": "object",
               "description": "Event location details",
               "properties": {
                 "displayName": {
                   "type": "string",
                   "description": "Location display name (e.g., 'Conference Room A', 'Microsoft Teams', '123 Main St')"
                 },
                 "address": {
                   "type": "object",
                   "description": "Physical address details",
                   "properties": {
                     "street": {
                       "type": "string",
                       "description": "Street address"
                     },
                     "city": {
                       "type": "string",
                       "description": "City name"
                     },
                     "state": {
                       "type": "string",
                       "description": "State or province"
                     },
                     "countryOrRegion": {
                       "type": "string",
                       "description": "Country or region"
                     },
                     "postalCode": {
                       "type": "string",
                       "description": "Postal or ZIP code"
                     }
                   },
                   "required": [],
                   "visible": ["street", "city", "state", "countryOrRegion", "postalCode"],
                   "additionalProperties": false
                 }
               },
               "required": [],
               "visible": ["displayName", "address"],
               "additionalProperties": false
             },
            "attendees": {
              "type": "array",
              "description": "List of event attendees",
              "items": {
                "type": "object",
                "properties": {
                  "emailAddress": {
                     "type": "object",
                     "description": "Attendee email details",
                     "properties": {
                       "address": {
                         "type": "string",
                         "description": "Email address of the attendee"
                       },
                       "name": {
                         "type": "string",
                         "description": "Display name of the attendee"
                       }
                     },
                     "required": ["address"],
                     "visible": ["address", "name"],
                     "additionalProperties": false
                   },
                  "type": {
                    "type": "string",
                    "enum": ["required", "optional", "resource"],
                    "description": "Type of attendee (required, optional, or resource)"
                  }
                },
                "required": ["emailAddress"],
                "visible": ["emailAddress"],
                "additionalProperties": false
              }
            },
            "isAllDay": {
              "type": "boolean",
              "description": "Whether this is an all-day event"
            },
            "showAs": {
              "type": "string",
              "enum": ["free", "tentative", "busy", "oof", "workingElsewhere"],
              "description": "Show availability as (free, tentative, busy, oof, workingElsewhere)"
            },
            "sensitivity": {
              "type": "string",
              "enum": ["normal", "personal", "private", "confidential"],
              "description": "Event sensitivity level"
            },
            "importance": {
              "type": "string",
              "enum": ["low", "normal", "high"],
              "description": "Event importance level"
            },
            "reminderMinutesBeforeStart": {
              "type": "integer",
              "description": "Minutes before start to show reminder (e.g., 15, 30, 60)"
            },
            "isReminderOn": {
              "type": "boolean",
              "description": "Whether to show a reminder for this event"
            },
            "categories": {
              "type": "array",
              "description": "List of category names for the event",
              "items": {
                "type": "string"
              }
            },
            "isOnlineMeeting": {
              "type": "boolean",
              "description": "Whether this is an online meeting"
            },
            "onlineMeetingProvider": {
              "type": "string",
              "enum": ["unknown", "skypeForBusiness", "skypeForConsumer", "teamsForBusiness"],
              "description": "Online meeting provider"
            },
            "allowNewTimeProposals": {
              "type": "boolean",
              "description": "Whether attendees can propose new times"
            },
            "responseRequested": {
              "type": "boolean",
              "description": "Whether to request responses from attendees"
            },
            "recurrence": {
              "type": "object",
              "description": "Recurrence pattern for recurring events",
              "properties": {
                                 "pattern": {
                   "type": "object",
                   "description": "Recurrence pattern details",
                   "properties": {
                     "type": {
                       "type": "string",
                       "enum": ["daily", "weekly", "absoluteMonthly", "relativeMonthly", "absoluteYearly", "relativeYearly"],
                       "description": "Recurrence pattern type"
                     },
                     "interval": {
                       "type": "integer",
                       "description": "Interval between occurrences"
                     },
                     "daysOfWeek": {
                       "type": "array",
                       "description": "Days of the week for weekly patterns",
                       "items": {
                         "type": "string",
                         "enum": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]
                       }
                     }
                   },
                   "required": ["type"],
                   "visible": ["type", "interval", "daysOfWeek"],
                   "additionalProperties": false
                 },
                "range": {
                   "type": "object",
                   "description": "Recurrence range",
                   "properties": {
                     "type": {
                       "type": "string",
                       "enum": ["endDate", "noEnd", "numbered"],
                       "description": "Range type"
                     },
                     "startDate": {
                       "type": "string",
                       "description": "Start date in YYYY-MM-DD format"
                     },
                     "endDate": {
                       "type": "string",
                       "description": "End date in YYYY-MM-DD format (for endDate type)"
                     },
                     "numberOfOccurrences": {
                       "type": "integer",
                       "description": "Number of occurrences (for numbered type)"
                     }
                   },
                   "required": ["type", "startDate"],
                   "visible": ["type", "startDate", "endDate", "numberOfOccurrences"],
                   "additionalProperties": false
                  }
                },
               "required": ["pattern", "range"],
               "visible": ["pattern", "range"],
               "additionalProperties": false
             }
          },
          "required": ["subject", "start", "end"],
          "visible": ["subject", "body", "start", "end", "location", "attendees", "isAllDay", "showAs", "sensitivity", "importance", "reminderMinutesBeforeStart", "isReminderOn", "categories", "isOnlineMeeting", "onlineMeetingProvider", "allowNewTimeProposals", "responseRequested", "recurrence"],
          "additionalProperties": false
        }
      },
      "required": ["path", "body"],
      "visible": ["path", "body"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__GET_SCHEDULE",
    "description": "Get the free/busy availability information for a collection of users, distribution lists, or resources (rooms or equipment) for a specified time period. Perfect for finding available meeting times and checking when people are free.",
    "tags": ["calendar", "schedule", "availability", "free-busy", "meeting-planning"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/calendar/getSchedule",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "description": "Schedule request parameters",
          "properties": {
            "schedules": {
              "type": "array",
              "description": "Collection of SMTP email addresses of users, distribution lists, or resources to get availability information for",
              "items": {
                "type": "string",
                "description": "Email address (e.g., 'user@company.com', 'room@company.com')"
              },
              "minItems": 1
            },
            "startTime": {
              "type": "object",
              "description": "The date, time, and time zone that the period starts",
              "properties": {
                "dateTime": {
                  "type": "string",
                  "description": "Start date and time in ISO 8601 format (e.g., '2024-06-21T09:00:00')"
                },
                "timeZone": {
                  "type": "string",
                  "description": "Time zone (e.g., 'UTC', 'America/New_York', 'Europe/London')"
                }
              },
              "required": ["dateTime"],
              "visible": ["dateTime", "timeZone"],
              "additionalProperties": false
            },
            "endTime": {
              "type": "object",
              "description": "The date, time, and time zone that the period ends",
              "properties": {
                "dateTime": {
                  "type": "string",
                  "description": "End date and time in ISO 8601 format (e.g., '2024-06-21T17:00:00')"
                },
                "timeZone": {
                  "type": "string",
                  "description": "Time zone (e.g., 'UTC', 'America/New_York', 'Europe/London')"
                }
              },
              "required": ["dateTime"],
              "visible": ["dateTime", "timeZone"],
              "additionalProperties": false
            },
            "availabilityViewInterval": {
              "type": "integer",
              "description": "Duration of a time slot in minutes for the availability view. Default is 30 minutes, minimum is 5, maximum is 1440 (24 hours)",
              "minimum": 5,
              "maximum": 1440
            }
          },
          "required": ["schedules", "startTime", "endTime"],
          "visible": ["schedules", "startTime", "endTime", "availabilityViewInterval"],
          "additionalProperties": false
        },
        "header": {
          "type": "object",
          "description": "Optional request headers for customizing the response",
          "properties": {
            "Prefer": {
              "type": "string",
              "description": "Use 'outlook.timezone=\"{timezone}\"' to specify the timezone for free/busy times in the response (e.g., 'outlook.timezone=\"Pacific Standard Time\"' or 'outlook.timezone=\"America/New_York\"'). If not specified, times are returned in UTC."
            }
          },
          "required": [],
          "visible": ["Prefer"],
          "additionalProperties": false
        }
      },
      "required": ["body"],
      "visible": ["body", "header"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__LIST_ALL_EVENTS",
    "description": "Get a comprehensive list of all event objects across all calendars in the user's mailbox. This provides a unified view of all events from every calendar, supporting timezone preferences and OData query parameters for filtering, sorting, and pagination. Complements the specific calendar LIST_EVENTS function.",
    "tags": ["calendar", "events", "list", "all", "comprehensive", "unified"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/me/events",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "description": "Query parameters for customizing the event list",
          "properties": {
            "$select": {
              "type": "string",
              "description": "Comma-separated list of properties to include (e.g., 'subject,start,end,organizer,attendees,location,body,bodyPreview')"
            },
            "$filter": {
              "type": "string",
              "description": "Filter expression to limit events (e.g., 'startsWith(subject,\"Meeting\")', 'sensitivity eq normal', 'showAs eq busy'). Note: Cannot filter on recurrence property."
            },
            "$orderby": {
              "type": "string",
              "description": "Property to sort events by (e.g., 'start/dateTime asc', 'subject desc', 'createdDateTime desc')"
            },
            "$top": {
              "type": "integer",
              "description": "Maximum number of events to return"
            },
            "$skip": {
              "type": "integer",
              "description": "Number of events to skip for pagination"
            },
            "$expand": {
              "type": "string",
              "description": "Expand related entities (e.g., 'attachments', 'calendar', 'instances')"
            }
          },
          "required": [],
          "visible": ["$select", "$filter", "$orderby", "$top", "$skip", "$expand"],
          "additionalProperties": false
        },
        "header": {
          "type": "object",
          "description": "Optional request headers for customizing the response",
          "properties": {
            "Prefer": {
              "type": "string",
              "description": "Use 'outlook.timezone=\"{timezone}\"' to specify the timezone for start and end times in the response (e.g., 'outlook.timezone=\"Pacific Standard Time\"' or 'outlook.timezone=\"America/New_York\"'). If not specified, times are returned in UTC."
            }
          },
          "required": [],
          "visible": ["Prefer"],
          "additionalProperties": false
        }
      },
      "required": [],
      "visible": ["query", "header"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__CREATE_EVENT_DEFAULT",
    "description": "Create an event in the user's default calendar with simplified parameters. Perfect for quick event creation without specifying a calendar ID. Supports all event features including attendees, locations, recurrence patterns, and online meeting details.",
    "tags": ["calendar", "event", "create", "default", "meeting", "appointment", "simple"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/events",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "description": "Event details to create in the default calendar",
          "properties": {
            "subject": {
              "type": "string",
              "description": "The event title/subject"
            },
            "body": {
              "type": "object",
              "description": "The event description/body",
              "properties": {
                "contentType": {
                  "type": "string",
                  "enum": ["text", "html"],
                  "description": "The content type (text or html)"
                },
                "content": {
                  "type": "string",
                  "description": "The content of the event description"
                }
              },
              "required": [],
              "visible": ["contentType", "content"],
              "additionalProperties": false
            },
            "start": {
              "type": "object",
              "description": "Event start date and time",
              "properties": {
                "dateTime": {
                  "type": "string",
                  "description": "Start date and time in ISO 8601 format (e.g., '2024-04-04T14:00:00')"
                },
                "timeZone": {
                  "type": "string",
                  "description": "Time zone (e.g., 'UTC', 'America/New_York', 'Europe/London')"
                }
              },
              "required": ["dateTime"],
              "visible": ["dateTime", "timeZone"],
              "additionalProperties": false
            },
            "end": {
              "type": "object",
              "description": "Event end date and time",
              "properties": {
                "dateTime": {
                  "type": "string",
                  "description": "End date and time in ISO 8601 format (e.g., '2024-04-04T15:00:00')"
                },
                "timeZone": {
                  "type": "string",
                  "description": "Time zone (e.g., 'UTC', 'America/New_York', 'Europe/London')"
                }
              },
              "required": ["dateTime"],
              "visible": ["dateTime", "timeZone"],
              "additionalProperties": false
            },
            "location": {
              "type": "object",
              "description": "Event location details",
              "properties": {
                "displayName": {
                  "type": "string",
                  "description": "Location display name (e.g., 'Conference Room A', 'Microsoft Teams', '123 Main St')"
                },
                "locationEmailAddress": {
                  "type": "string",
                  "description": "Email address for room or resource (if the location has an email address)"
                },
                "address": {
                  "type": "object",
                  "description": "Physical address details",
                  "properties": {
                    "street": {
                      "type": "string",
                      "description": "Street address"
                    },
                    "city": {
                      "type": "string",
                      "description": "City name"
                    },
                    "state": {
                      "type": "string",
                      "description": "State or province"
                    },
                    "countryOrRegion": {
                      "type": "string",
                      "description": "Country or region"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal or ZIP code"
                    }
                  },
                  "required": [],
                  "visible": ["street", "city", "state", "countryOrRegion", "postalCode"],
                  "additionalProperties": false
                }
              },
              "required": [],
              "visible": ["displayName", "locationEmailAddress", "address"],
              "additionalProperties": false
            },
            "attendees": {
              "type": "array",
              "description": "List of event attendees (including resources like meeting rooms or equipment)",
              "items": {
                "type": "object",
                "properties": {
                  "emailAddress": {
                    "type": "object",
                    "description": "Attendee email details",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Email address of the attendee or resource"
                      },
                      "name": {
                        "type": "string",
                        "description": "Display name of the attendee or resource"
                      }
                    },
                    "required": ["address"],
                    "visible": ["address", "name"],
                    "additionalProperties": false
                  },
                  "type": {
                    "type": "string",
                    "enum": ["required", "optional", "resource"],
                    "description": "Type: 'required' for essential attendees, 'optional' for non-essential, 'resource' for rooms/equipment"
                  }
                },
                "required": ["emailAddress"],
                "visible": ["emailAddress", "type"],
                "additionalProperties": false
              }
            },
            "isAllDay": {
              "type": "boolean",
              "description": "Whether this is an all-day event"
            },
            "showAs": {
              "type": "string",
              "enum": ["free", "tentative", "busy", "oof", "workingElsewhere"],
              "description": "Show availability as (free, tentative, busy, oof, workingElsewhere)"
            },
            "sensitivity": {
              "type": "string",
              "enum": ["normal", "personal", "private", "confidential"],
              "description": "Event sensitivity level"
            },
            "importance": {
              "type": "string",
              "enum": ["low", "normal", "high"],
              "description": "Event importance level"
            },
            "reminderMinutesBeforeStart": {
              "type": "integer",
              "description": "Minutes before start to show reminder (e.g., 15, 30, 60)"
            },
            "isReminderOn": {
              "type": "boolean",
              "description": "Whether to show a reminder for this event"
            },
            "categories": {
              "type": "array",
              "description": "List of category names for the event",
              "items": {
                "type": "string"
              }
            },
            "isOnlineMeeting": {
              "type": "boolean",
              "description": "Whether this is an online meeting"
            },
            "onlineMeetingProvider": {
              "type": "string",
              "enum": ["unknown", "skypeForBusiness", "skypeForConsumer", "teamsForBusiness"],
              "description": "Online meeting provider"
            },
            "allowNewTimeProposals": {
              "type": "boolean",
              "description": "Whether attendees can propose new times (default: true)"
            },
            "responseRequested": {
              "type": "boolean",
              "description": "Whether to request responses from attendees"
            },
            "recurrence": {
              "type": "object",
              "description": "The recurrence pattern for the event",
              "properties": {
                "pattern": {
                  "type": "object",
                  "description": "The frequency of the recurrence",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["daily", "weekly", "absoluteMonthly", "relativeMonthly", "absoluteYearly", "relativeYearly"],
                      "description": "The recurrence pattern type"
                    },
                    "interval": {
                      "type": "integer",
                      "description": "The number of units between occurrences"
                    },
                    "month": {
                      "type": "integer",
                      "description": "The month in which the event occurs"
                    },
                    "dayOfMonth": {
                      "type": "integer",
                      "description": "The day of the month on which the event occurs"
                    },
                    "daysOfWeek": {
                      "type": "array",
                      "description": "Days of the week on which the event occurs",
                      "items": {
                        "type": "string",
                        "enum": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]
                      }
                    },
                    "firstDayOfWeek": {
                      "type": "string",
                      "enum": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"],
                      "description": "The first day of the week"
                    },
                    "index": {
                      "type": "string",
                      "enum": ["first", "second", "third", "fourth", "last"],
                      "description": "Specifies on which instance of the allowed days specified in daysOfWeek the event occurs"
                    }
                  },
                  "required": [],
                  "visible": ["type", "interval", "month", "dayOfMonth", "daysOfWeek", "firstDayOfWeek", "index"],
                  "additionalProperties": false
                },
                "range": {
                  "type": "object",
                  "description": "The range of the recurrence",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["endDate", "noEnd", "numbered"],
                      "description": "The recurrence range type"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "The date to start applying the recurrence pattern"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "The date to stop applying the recurrence pattern"
                    },
                    "numberOfOccurrences": {
                      "type": "integer",
                      "description": "The number of times to repeat the event"
                    }
                  },
                  "required": [],
                  "visible": ["type", "startDate", "endDate", "numberOfOccurrences"],
                  "additionalProperties": false
                }
              },
              "required": [],
              "visible": ["pattern", "range"],
              "additionalProperties": false
            }
          },
          "required": ["subject", "start", "end"],
          "visible": ["subject", "body", "start", "end", "location", "attendees", "isAllDay", "showAs", "sensitivity", "importance", "reminderMinutesBeforeStart", "isReminderOn", "categories", "isOnlineMeeting", "onlineMeetingProvider", "allowNewTimeProposals", "responseRequested", "recurrence"],
          "additionalProperties": false
        }
      },
      "required": ["body"],
      "visible": ["body"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__GET_EVENT",
    "description": "Get the properties and relationships of a specific event. Returns event details including subject, body, attendees, location, start/end times, and all other event properties. Supports timezone preferences and custom property selection.",
    "tags": ["calendar", "event", "get", "details"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/me/events/{eventId}",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event request",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event to retrieve"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for customizing the event response",
          "properties": {
            "$select": {
              "type": "string",
              "description": "Comma-separated list of properties to include in the response (e.g., 'subject,body,start,end,attendees,location,organizer')"
            },
            "$expand": {
              "type": "string",
              "description": "Expand related entities (e.g., 'attachments', 'extensions', 'singleValueExtendedProperties', 'multiValueExtendedProperties')"
            }
          },
          "required": [],
          "visible": ["$select", "$expand"],
          "additionalProperties": false
        },
        "header": {
          "type": "object",
          "description": "Optional request headers for customizing the response",
          "properties": {
            "Prefer": {
              "type": "string",
              "description": "Use 'outlook.timezone=\"{timezone}\"' to specify the timezone for start and end times in the response (e.g., 'outlook.timezone=\"Pacific Standard Time\"' or 'outlook.timezone=\"America/New_York\"'). If not specified, times are returned in UTC."
            }
          },
          "required": [],
          "visible": ["Prefer"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path", "query", "header"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__UPDATE_EVENT",
    "description": "Update the properties of an existing event. Can modify subject, attendees, times, location, body, importance, reminders, online meeting settings, and other event properties. Use PATCH to update only specified fields while preserving others.",
    "tags": ["calendar", "event", "update", "modify", "edit"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "PATCH",
      "path": "/me/events/{eventId}",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event to update",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event to update"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Event properties to update. Only include fields you want to change.",
          "properties": {
            "subject": {
              "type": "string",
              "description": "The text of the event's subject line"
            },
            "body": {
              "type": "object",
              "description": "The body of the message associated with the event",
              "properties": {
                "contentType": {
                  "type": "string",
                  "enum": ["text", "html"],
                  "description": "The format of the content (text or html)"
                },
                "content": {
                  "type": "string",
                  "description": "The content of the body"
                }
              },
              "required": [],
              "visible": ["contentType", "content"],
              "additionalProperties": false
            },
            "start": {
              "type": "object",
              "description": "The start date, time, and time zone of the event",
              "properties": {
                "dateTime": {
                  "type": "string",
                  "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)"
                },
                "timeZone": {
                  "type": "string",
                  "description": "Represents a time zone, for example, 'Pacific Standard Time'"
                }
              },
              "required": [],
              "visible": ["dateTime", "timeZone"],
              "additionalProperties": false
            },
            "end": {
              "type": "object",
              "description": "The date, time, and time zone that the event ends",
              "properties": {
                "dateTime": {
                  "type": "string",
                  "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)"
                },
                "timeZone": {
                  "type": "string",
                  "description": "Represents a time zone, for example, 'Pacific Standard Time'"
                }
              },
              "required": [],
              "visible": ["dateTime", "timeZone"],
              "additionalProperties": false
            },
            "location": {
              "type": "object",
              "description": "The location of the event",
              "properties": {
                "displayName": {
                  "type": "string",
                  "description": "The name of the location"
                },
                "locationType": {
                  "type": "string",
                  "enum": ["default", "conferenceRoom", "homeAddress", "businessAddress", "geoCoordinates", "streetAddress", "hotel", "restaurant", "localBusiness", "postalAddress"],
                  "description": "The type of location"
                },
                "uniqueId": {
                  "type": "string",
                  "description": "For internal use only"
                },
                "uniqueIdType": {
                  "type": "string",
                  "enum": ["unknown", "locationStore", "directory", "private", "bing"],
                  "description": "For internal use only"
                },
                "address": {
                  "type": "object",
                  "description": "Physical address of the location",
                  "properties": {
                    "street": {
                      "type": "string",
                      "description": "Street address"
                    },
                    "city": {
                      "type": "string",
                      "description": "City name"
                    },
                    "state": {
                      "type": "string",
                      "description": "State or province"
                    },
                    "countryOrRegion": {
                      "type": "string",
                      "description": "Country or region name"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal or ZIP code"
                    }
                  },
                  "required": [],
                  "visible": ["street", "city", "state", "countryOrRegion", "postalCode"],
                  "additionalProperties": false
                },
                "coordinates": {
                  "type": "object",
                  "description": "Geographic coordinates of the location",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "description": "Latitude coordinate"
                    },
                    "longitude": {
                      "type": "number",
                      "description": "Longitude coordinate"
                    }
                  },
                  "required": [],
                  "visible": ["latitude", "longitude"],
                  "additionalProperties": false
                }
              },
              "required": [],
              "visible": ["displayName", "locationType", "uniqueId", "uniqueIdType", "address", "coordinates"],
              "additionalProperties": false
            },
            "attendees": {
              "type": "array",
              "description": "The collection of attendees for the event",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["required", "optional", "resource"],
                    "description": "The type of attendee"
                  },
                  "emailAddress": {
                    "type": "object",
                    "description": "Email address information",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "The email address"
                      },
                      "name": {
                        "type": "string",
                        "description": "The display name"
                      }
                    },
                    "required": [],
                    "visible": ["address", "name"],
                    "additionalProperties": false
                  }
                },
                "required": [],
                "visible": ["type", "emailAddress"],
                "additionalProperties": false
              }
            },
            "importance": {
              "type": "string",
              "enum": ["low", "normal", "high"],
              "description": "The importance of the event"
            },
            "sensitivity": {
              "type": "string",
              "enum": ["normal", "personal", "private", "confidential"],
              "description": "The sensitivity level of the event"
            },
            "showAs": {
              "type": "string",
              "enum": ["free", "tentative", "busy", "oof", "workingElsewhere", "unknown"],
              "description": "The status to show during the event time"
            },
            "isAllDay": {
              "type": "boolean",
              "description": "Set to true if the event lasts all day"
            },
            "isReminderOn": {
              "type": "boolean",
              "description": "Set to true if an alert is set to remind the user of the event"
            },
            "reminderMinutesBeforeStart": {
              "type": "integer",
              "description": "The number of minutes before the event start time that the reminder alert occurs"
            },
            "isOnlineMeeting": {
              "type": "boolean",
              "description": "True if this event has online meeting information, false otherwise"
            },
            "onlineMeetingProvider": {
              "type": "string",
              "enum": ["teamsForBusiness", "skypeForBusiness", "skypeForConsumer"],
              "description": "Represents the online meeting service provider"
            },
            "responseRequested": {
              "type": "boolean",
              "description": "Set to true if the sender would like a response when the event is accepted or declined"
            },
            "hideAttendees": {
              "type": "boolean",
              "description": "When set to true, each attendee only sees themselves in the meeting request and meeting tracking list"
            },
            "categories": {
              "type": "array",
              "description": "The categories associated with the event",
              "items": {
                "type": "string"
              }
            },
            "recurrence": {
              "type": "object",
              "description": "The recurrence pattern for the event",
              "properties": {
                "pattern": {
                  "type": "object",
                  "description": "The frequency of the recurrence",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["daily", "weekly", "absoluteMonthly", "relativeMonthly", "absoluteYearly", "relativeYearly"],
                      "description": "The recurrence pattern type"
                    },
                    "interval": {
                      "type": "integer",
                      "description": "The number of units between occurrences"
                    },
                    "month": {
                      "type": "integer",
                      "description": "The month in which the event occurs"
                    },
                    "dayOfMonth": {
                      "type": "integer",
                      "description": "The day of the month on which the event occurs"
                    },
                    "daysOfWeek": {
                      "type": "array",
                      "description": "Days of the week on which the event occurs",
                      "items": {
                        "type": "string",
                        "enum": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]
                      }
                    },
                    "firstDayOfWeek": {
                      "type": "string",
                      "enum": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"],
                      "description": "The first day of the week"
                    },
                    "index": {
                      "type": "string",
                      "enum": ["first", "second", "third", "fourth", "last"],
                      "description": "Specifies on which instance of the allowed days specified in daysOfWeek the event occurs"
                    }
                  },
                  "required": [],
                  "visible": ["type", "interval", "month", "dayOfMonth", "daysOfWeek", "firstDayOfWeek", "index"],
                  "additionalProperties": false
                },
                "range": {
                  "type": "object",
                  "description": "The range of the recurrence",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["endDate", "noEnd", "numbered"],
                      "description": "The recurrence range type"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "The date to start applying the recurrence pattern"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "The date to stop applying the recurrence pattern"
                    },
                    "numberOfOccurrences": {
                      "type": "integer",
                      "description": "The number of times to repeat the event"
                    }
                  },
                  "required": [],
                  "visible": ["type", "startDate", "endDate", "numberOfOccurrences"],
                  "additionalProperties": false
                }
              },
              "required": [],
              "visible": ["pattern", "range"],
              "additionalProperties": false
            }
          },
          "required": [],
          "visible": ["subject", "body", "start", "end", "location", "attendees", "importance", "sensitivity", "showAs", "isAllDay", "isReminderOn", "reminderMinutesBeforeStart", "isOnlineMeeting", "onlineMeetingProvider", "responseRequested", "hideAttendees", "categories", "recurrence"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path", "body"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__DELETE_EVENT",
    "description": "Delete a specific event from the calendar. If the event is a meeting, deleting it on the organizer's calendar sends a cancellation message to all attendees. This action cannot be undone.",
    "tags": ["calendar", "event", "delete", "remove", "cancel"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "DELETE",
      "path": "/me/events/{eventId}",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event to delete",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event to delete"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__PERMANENT_DELETE_EVENT",
    "description": "Permanently delete an event and place it in the purges folder in the dumpster. Unlike regular delete, this action moves the event to a deeper deletion state that cannot be recovered by standard means. Email clients cannot access permanently deleted items.",
    "tags": ["calendar", "event", "permanent", "delete", "purge"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/events/{eventId}/permanentDelete",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event to permanently delete",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event to permanently delete"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__DELTA_EVENTS",
    "description": "Get a set of event resources that have been added, deleted, or updated in a calendarView (a range of events defined by start and end dates) of the user's primary calendar. Supports delta query for incremental sync.",
    "tags": ["calendar", "event", "delta", "sync", "changes"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/me/calendarView/delta",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "description": "Query parameters for delta sync. Specify startDateTime and endDateTime for the initial call. Use $deltatoken or $skiptoken for subsequent calls.",
          "properties": {
            "startDateTime": {
              "type": "string",
              "description": "The start date and time of the time range in ISO 8601 format (e.g., '2025-07-20T00:00:00Z')"
            },
            "endDateTime": {
              "type": "string",
              "description": "The end date and time of the time range in ISO 8601 format (e.g., '2025-07-22T00:00:00Z')"
            },
            "$deltatoken": {
              "type": "string",
              "description": "A state token returned in the @odata.deltaLink URL of the previous delta function call. Use for incremental sync."
            },
            "$skiptoken": {
              "type": "string",
              "description": "A state token returned in the @odata.nextLink URL of the previous delta function call. Use for pagination."
            }
          },
          "required": [],
          "visible": ["startDateTime", "endDateTime", "$deltatoken", "$skiptoken"],
          "additionalProperties": false
        },
        "header": {
          "type": "object",
          "description": "Optional request headers for customizing the response",
          "properties": {
            "Prefer": {
              "type": "string",
              "description": "Use 'outlook.timezone=\"{timezone}\"' to specify the timezone for start and end times in the response (e.g., 'outlook.timezone=\"Pacific Standard Time\"' or 'outlook.timezone=\"America/New_York\"'). If not specified, times are returned in UTC."
            }
          },
          "required": [],
          "visible": ["Prefer"],
          "additionalProperties": false
        }
      },
      "required": [],
      "visible": ["query", "header"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__FORWARD_EVENT",
    "description": "Forward a meeting event to new recipients. Allows the organizer or attendee to forward the meeting request, optionally including a comment. The new recipients will be added to the event and notified.",
    "tags": ["calendar", "event", "forward", "invite", "meeting"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/events/{eventId}/forward",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event to forward",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event to forward"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Request body for forwarding the event.",
          "properties": {
            "Comment": {
              "type": "string",
              "description": "A comment to include in the forward notification. Can be empty."
            },
            "ToRecipients": {
              "type": "array",
              "description": "The list of recipients to forward the event to.",
              "items": {
                "type": "object",
                "properties": {
                  "EmailAddress": {
                    "type": "object",
                    "properties": {
                      "Address": {
                        "type": "string",
                        "description": "The email address of the recipient."
                      },
                      "Name": {
                        "type": "string",
                        "description": "The display name of the recipient."
                      }
                    },
                    "required": ["Address"],
                    "visible": ["Address", "Name"],
                    "additionalProperties": false
                  }
                },
                "required": ["EmailAddress"],
                "visible": ["EmailAddress"],
                "additionalProperties": false
              }
            }
          },
          "required": ["ToRecipients"],
          "visible": ["Comment", "ToRecipients"],
          "additionalProperties": false
        }
      },
      "required": ["path", "body"],
      "visible": ["path", "body"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__ACCEPT_EVENT",
    "description": "Accept the specified event in a user calendar. Optionally include a comment and choose whether to send a response to the organizer.",
    "tags": ["calendar", "event", "accept", "response", "meeting"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/events/{eventId}/accept",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event to accept",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event to accept"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Request body for accepting the event.",
          "properties": {
            "comment": {
              "type": "string",
              "description": "Text included in the response. Optional."
            },
            "sendResponse": {
              "type": "boolean",
              "description": "true if a response is to be sent to the organizer; otherwise, false. Optional. Default is true."
            }
          },
          "required": [],
          "visible": ["comment", "sendResponse"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path", "body"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__TENTATIVELY_ACCEPT_EVENT",
    "description": "Tentatively accept the specified event in a user calendar. Optionally include a comment, propose a new time, and choose whether to send a response to the organizer.",
    "tags": ["calendar", "event", "tentative", "response", "meeting"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/events/{eventId}/tentativelyAccept",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event to tentatively accept",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event to tentatively accept"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Request body for tentatively accepting the event.",
          "properties": {
            "comment": {
              "type": "string",
              "description": "Text included in the response. Optional."
            },
            "sendResponse": {
              "type": "boolean",
              "description": "true if a response is to be sent to the organizer; otherwise, false. Optional. Default is true."
            },
            "proposedNewTime": {
              "type": "object",
              "description": "An alternate date/time proposed by an invitee for a meeting request to start and end. Valid only for events that allow new time proposals. Optional.",
              "properties": {
                "start": {
                  "type": "object",
                  "description": "Proposed new start time.",
                  "properties": {
                    "dateTime": {
                      "type": "string",
                      "description": "Start date and time in ISO 8601 format (e.g., '2025-07-22T10:00:00')"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Time zone for the start time (e.g., 'UTC', 'Pacific Standard Time')"
                    }
                  },
                  "required": ["dateTime", "timeZone"],
                  "visible": ["dateTime", "timeZone"],
                  "additionalProperties": false
                },
                "end": {
                  "type": "object",
                  "description": "Proposed new end time.",
                  "properties": {
                    "dateTime": {
                      "type": "string",
                      "description": "End date and time in ISO 8601 format (e.g., '2025-07-22T11:00:00')"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Time zone for the end time (e.g., 'UTC', 'Pacific Standard Time')"
                    }
                  },
                  "required": ["dateTime", "timeZone"],
                  "visible": ["dateTime", "timeZone"],
                  "additionalProperties": false
                }
              },
              "required": ["start", "end"],
              "visible": ["start", "end"],
              "additionalProperties": false
            }
          },
          "required": [],
          "visible": ["comment", "sendResponse", "proposedNewTime"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path", "body"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__DISMISS_REMINDER",
    "description": "Dismiss a reminder that has been triggered for an event in a user calendar.",
    "tags": ["calendar", "event", "reminder", "dismiss", "notification"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/events/{eventId}/dismissReminder",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event to dismiss the reminder for",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event to dismiss the reminder for"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "visible": ["path"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__SNOOZE_REMINDER",
    "description": "Postpone a reminder for an event in a user calendar until a new time.",
    "tags": ["calendar", "event", "reminder", "snooze", "notification"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/me/events/{eventId}/snoozeReminder",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event to snooze the reminder for",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event to snooze the reminder for"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "description": "Request body for snoozing the reminder.",
          "properties": {
            "newReminderTime": {
              "type": "object",
              "description": "The new date and time to trigger the reminder.",
              "properties": {
                "dateTime": {
                  "type": "string",
                  "description": "The new reminder time in ISO 8601 format (e.g., '2025-07-21T09:00:00')"
                },
                "timeZone": {
                  "type": "string",
                  "description": "The time zone for the new reminder time (e.g., 'UTC', 'Pacific Standard Time')"
                }
              },
              "required": ["dateTime", "timeZone"],
              "visible": ["dateTime", "timeZone"],
              "additionalProperties": false
            }
          },
          "required": ["newReminderTime"],
          "visible": ["newReminderTime"],
          "additionalProperties": false
        }
      },
      "required": ["path", "body"],
      "visible": ["path", "body"],
      "additionalProperties": false
    }
  },
  {
    "name": "MICROSOFT_CALENDAR__LIST_INSTANCES",
    "description": "Get the instances (occurrences) of an event for a specified time range. If the event is a seriesMaster, returns the occurrences and exceptions in the range.",
    "tags": ["calendar", "event", "instances", "recurrence", "occurrences"],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "GET",
      "path": "/me/events/{eventId}/instances",
      "server_url": "https://graph.microsoft.com/v1.0"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "description": "Path parameters for the event to get instances for",
          "properties": {
            "eventId": {
              "type": "string",
              "description": "The unique identifier of the event (series master or single event)"
            }
          },
          "required": ["eventId"],
          "visible": ["eventId"],
          "additionalProperties": false
        },
        "query": {
          "type": "object",
          "description": "Query parameters for the time range and OData options.",
          "properties": {
            "startDateTime": {
              "type": "string",
              "description": "The start date and time of the time range in ISO 8601 format (e.g., '2025-07-20T00:00:00Z')"
            },
            "endDateTime": {
              "type": "string",
              "description": "The end date and time of the time range in ISO 8601 format (e.g., '2025-07-22T00:00:00Z')"
            },
            "$select": {
              "type": "string",
              "description": "Comma-separated list of properties to include in the response (e.g., 'subject,start,end,recurrence,type')"
            },
            "$top": {
              "type": "integer",
              "description": "Maximum number of instances to return"
            },
            "$skip": {
              "type": "integer",
              "description": "Number of instances to skip for pagination"
            },
            "$orderby": {
              "type": "string",
              "description": "Property to sort instances by (e.g., 'start/dateTime asc')"
            }
          },
          "required": ["startDateTime", "endDateTime"],
          "visible": ["startDateTime", "endDateTime", "$select", "$top", "$skip", "$orderby"],
          "additionalProperties": false
        }
      },
      "required": ["path", "query"],
      "visible": ["path", "query"],
      "additionalProperties": false
    }
  }
]
